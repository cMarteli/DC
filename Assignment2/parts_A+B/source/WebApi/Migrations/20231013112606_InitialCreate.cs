using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace WebApi.Migrations
{
    /// <inheritdoc />
    public partial class InitialCreate : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Admins",
                columns: table => new
                {
                    Username = table.Column<string>(type: "TEXT", nullable: false),
                    Name = table.Column<string>(type: "TEXT", nullable: true),
                    Email = table.Column<string>(type: "TEXT", nullable: true),
                    Address = table.Column<string>(type: "TEXT", nullable: true),
                    Phone = table.Column<string>(type: "TEXT", nullable: true),
                    Picture = table.Column<byte[]>(type: "BLOB", nullable: true),
                    Password = table.Column<string>(type: "TEXT", nullable: true),
                    SessionID = table.Column<string>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Admins", x => x.Username);
                });

            migrationBuilder.CreateTable(
                name: "AuditLogs",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    EntityName = table.Column<string>(type: "TEXT", nullable: false),
                    Action = table.Column<string>(type: "TEXT", nullable: false),
                    OriginalValues = table.Column<string>(type: "TEXT", nullable: false),
                    CurrentValues = table.Column<string>(type: "TEXT", nullable: false),
                    Timestamp = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuditLogs", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    Username = table.Column<string>(type: "TEXT", nullable: false),
                    Name = table.Column<string>(type: "TEXT", nullable: true),
                    Email = table.Column<string>(type: "TEXT", nullable: true),
                    Address = table.Column<string>(type: "TEXT", nullable: true),
                    Phone = table.Column<string>(type: "TEXT", nullable: true),
                    Picture = table.Column<byte[]>(type: "BLOB", nullable: true),
                    Password = table.Column<string>(type: "TEXT", nullable: true),
                    SessionID = table.Column<string>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Username);
                });

            migrationBuilder.CreateTable(
                name: "BankAccounts",
                columns: table => new
                {
                    AccountNumber = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    AccountHolderName = table.Column<string>(type: "TEXT", nullable: true),
                    Balance = table.Column<double>(type: "REAL", nullable: false),
                    UserUsername = table.Column<string>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BankAccounts", x => x.AccountNumber);
                    table.ForeignKey(
                        name: "FK_BankAccounts_Users_UserUsername",
                        column: x => x.UserUsername,
                        principalTable: "Users",
                        principalColumn: "Username",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Transactions",
                columns: table => new
                {
                    TransactionId = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    FromAccountNumber = table.Column<int>(type: "INTEGER", nullable: false),
                    ToAccountNumber = table.Column<int>(type: "INTEGER", nullable: false),
                    Amount = table.Column<double>(type: "REAL", nullable: false),
                    Timestamp = table.Column<DateTime>(type: "TEXT", nullable: false),
                    BankAccountAccountNumber = table.Column<int>(type: "INTEGER", nullable: true),
                    Description = table.Column<string>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Transactions", x => x.TransactionId);
                    table.ForeignKey(
                        name: "FK_Transactions_BankAccounts_BankAccountAccountNumber",
                        column: x => x.BankAccountAccountNumber,
                        principalTable: "BankAccounts",
                        principalColumn: "AccountNumber");
                    table.ForeignKey(
                        name: "FK_Transactions_BankAccounts_FromAccountNumber",
                        column: x => x.FromAccountNumber,
                        principalTable: "BankAccounts",
                        principalColumn: "AccountNumber",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Transactions_BankAccounts_ToAccountNumber",
                        column: x => x.ToAccountNumber,
                        principalTable: "BankAccounts",
                        principalColumn: "AccountNumber",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.InsertData(
                table: "Admins",
                columns: new[] { "Username", "Address", "Email", "Name", "Password", "Phone", "Picture", "SessionID" },
                values: new object[] { "admin", "Sydney", "email0@gmail.com", "Admin User", "adminpassword", "061-000-0200", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 81, 130, 51, 255, 94, 84, 91, 255, 125, 145, 132, 255, 61, 102, 211, 255, 39, 32, 36, 255, 216, 78, 188, 255, 11, 42, 197, 255, 167, 207, 28, 255, 0, 46, 110, 49, 255, 176, 69, 230, 255, 168, 142, 251, 255, 200, 33, 48, 255, 110, 103, 132, 255, 137, 44, 63, 255, 214, 52, 23, 255, 7, 64, 30, 255, 0, 133, 166, 101, 255, 220, 45, 59, 255, 159, 181, 195, 255, 197, 137, 63, 255, 105, 230, 78, 255, 51, 82, 202, 255, 168, 117, 201, 255, 19, 23, 182, 255, 0, 45, 12, 94, 255, 194, 199, 1, 255, 190, 139, 140, 255, 44, 136, 97, 255, 20, 240, 182, 255, 36, 82, 55, 255, 193, 201, 120, 255, 5, 38, 185, 255, 0, 120, 120, 68, 255, 241, 82, 86, 255, 39, 33, 39, 255, 192, 236, 155, 255, 202, 28, 12, 255, 32, 11, 105, 255, 174, 13, 1, 255, 33, 68, 36, 255, 0, 82, 154, 9, 255, 152, 188, 203, 255, 169, 73, 31, 255, 37, 71, 82, 255, 8, 147, 84, 255, 221, 4, 232, 255, 54, 82, 161, 255, 115, 146, 116, 255, 0, 215, 44, 33, 255, 117, 147, 165, 255, 166, 17, 25, 255, 145, 9, 109, 255, 187, 153, 120, 255, 47, 249, 248, 255, 189, 70, 130, 255, 232, 168, 213, 255, 0, 92, 225, 7, 255, 24, 114, 239, 255, 75, 142, 141, 255, 48, 149, 37, 255, 162, 174, 241, 255, 127, 210, 242, 255, 1, 243, 239, 255, 220, 243, 67, 255, 103, 139, 150, 139, 237, 2, 202, 191, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Username", "Address", "Email", "Name", "Password", "Phone", "Picture", "SessionID" },
                values: new object[,]
                {
                    { "audjy", "6931 Elm Rd", "audjy@examplemail.com", "gyosys vouniebc", "9231", "255-367-2880", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 168, 253, 181, 255, 29, 131, 51, 255, 150, 186, 30, 255, 28, 230, 100, 255, 220, 97, 38, 255, 105, 146, 20, 255, 46, 216, 28, 255, 61, 148, 220, 255, 0, 31, 232, 193, 255, 32, 51, 128, 255, 154, 50, 11, 255, 176, 119, 178, 255, 230, 9, 40, 255, 125, 53, 5, 255, 79, 185, 115, 255, 39, 56, 21, 255, 0, 74, 70, 134, 255, 198, 0, 230, 255, 1, 194, 213, 255, 82, 40, 250, 255, 228, 178, 70, 255, 216, 1, 209, 255, 73, 142, 3, 255, 46, 26, 248, 255, 0, 69, 236, 78, 255, 79, 82, 97, 255, 97, 22, 77, 255, 170, 222, 92, 255, 249, 247, 244, 255, 211, 191, 134, 255, 80, 184, 0, 255, 119, 161, 158, 255, 0, 234, 225, 54, 255, 205, 103, 215, 255, 205, 79, 35, 255, 64, 27, 105, 255, 197, 246, 127, 255, 159, 30, 19, 255, 89, 18, 51, 255, 74, 5, 74, 255, 0, 72, 161, 98, 255, 207, 172, 49, 255, 35, 104, 160, 255, 82, 108, 3, 255, 144, 201, 228, 255, 195, 75, 199, 255, 251, 47, 67, 255, 208, 0, 203, 255, 0, 219, 232, 184, 255, 139, 49, 188, 255, 5, 74, 64, 255, 64, 215, 118, 255, 73, 179, 151, 255, 93, 87, 123, 255, 37, 128, 134, 255, 202, 224, 242, 255, 0, 173, 95, 191, 255, 183, 21, 238, 255, 44, 233, 237, 255, 89, 243, 15, 255, 187, 161, 136, 255, 214, 125, 170, 255, 231, 171, 3, 255, 181, 125, 23, 255, 190, 147, 156, 226, 156, 88, 68, 22, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "azpbs", "9171 Maple Ln", "azpbs@examplemail.com", "ehrsah tuqpzfxu", "5070", "996-421-7406", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 96, 4, 130, 255, 17, 27, 167, 255, 199, 182, 146, 255, 133, 120, 5, 255, 68, 99, 178, 255, 40, 2, 150, 255, 82, 180, 172, 255, 94, 14, 220, 255, 0, 115, 245, 192, 255, 30, 20, 105, 255, 201, 160, 33, 255, 158, 206, 110, 255, 91, 106, 146, 255, 148, 249, 182, 255, 26, 151, 129, 255, 168, 38, 154, 255, 0, 34, 226, 76, 255, 65, 157, 148, 255, 172, 147, 167, 255, 146, 125, 233, 255, 148, 65, 227, 255, 140, 128, 17, 255, 158, 247, 238, 255, 47, 229, 112, 255, 0, 107, 234, 108, 255, 78, 82, 19, 255, 47, 82, 18, 255, 224, 149, 77, 255, 137, 126, 28, 255, 18, 123, 1, 255, 240, 8, 74, 255, 252, 225, 92, 255, 0, 210, 128, 87, 255, 161, 112, 114, 255, 203, 161, 61, 255, 119, 60, 254, 255, 213, 160, 62, 255, 97, 122, 9, 255, 69, 217, 57, 255, 236, 78, 23, 255, 0, 245, 112, 205, 255, 19, 105, 164, 255, 229, 98, 32, 255, 100, 65, 64, 255, 121, 206, 85, 255, 216, 235, 59, 255, 35, 85, 20, 255, 38, 63, 197, 255, 0, 227, 75, 115, 255, 245, 250, 221, 255, 86, 202, 220, 255, 23, 191, 1, 255, 221, 111, 187, 255, 8, 230, 246, 255, 115, 189, 239, 255, 111, 79, 168, 255, 0, 229, 244, 224, 255, 151, 99, 243, 255, 1, 31, 60, 255, 60, 112, 166, 255, 65, 230, 200, 255, 67, 93, 66, 255, 248, 157, 183, 255, 41, 179, 59, 255, 129, 159, 159, 85, 99, 222, 37, 79, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "dlqpk", "2887 Elm St", "dlqpk@examplemail.com", "ofoymn qbvvydbd", "1069", "343-823-3713", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 174, 39, 194, 255, 165, 3, 134, 255, 186, 18, 53, 255, 41, 113, 18, 255, 191, 215, 54, 255, 127, 91, 175, 255, 52, 41, 229, 255, 151, 180, 215, 255, 0, 48, 146, 151, 255, 36, 129, 228, 255, 165, 144, 161, 255, 104, 104, 121, 255, 231, 185, 66, 255, 202, 112, 80, 255, 29, 194, 123, 255, 75, 202, 244, 255, 0, 52, 83, 215, 255, 74, 18, 112, 255, 20, 186, 56, 255, 156, 95, 51, 255, 12, 4, 254, 255, 30, 238, 89, 255, 150, 116, 72, 255, 93, 128, 134, 255, 0, 11, 217, 71, 255, 75, 122, 38, 255, 103, 37, 56, 255, 176, 46, 170, 255, 241, 158, 252, 255, 99, 241, 112, 255, 56, 78, 196, 255, 38, 126, 139, 255, 0, 202, 226, 46, 255, 209, 12, 113, 255, 46, 108, 227, 255, 199, 203, 83, 255, 19, 190, 176, 255, 76, 35, 47, 255, 66, 238, 193, 255, 40, 212, 107, 255, 0, 66, 134, 171, 255, 48, 158, 154, 255, 15, 110, 79, 255, 26, 219, 49, 255, 149, 141, 241, 255, 32, 45, 104, 255, 34, 133, 74, 255, 6, 80, 22, 255, 0, 209, 99, 33, 255, 51, 31, 177, 255, 170, 63, 5, 255, 212, 29, 17, 255, 110, 183, 101, 255, 14, 166, 177, 255, 174, 102, 87, 255, 63, 88, 154, 255, 0, 177, 26, 100, 255, 9, 225, 153, 255, 128, 64, 68, 255, 174, 236, 160, 255, 78, 65, 198, 255, 181, 241, 219, 255, 230, 241, 136, 255, 85, 139, 130, 255, 87, 92, 152, 185, 181, 130, 75, 2, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "ggqsl", "506 Elm Blvd", "ggqsl@examplemail.com", "hqubtp kemafiaw", "6267", "355-836-9694", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 141, 12, 34, 255, 66, 171, 72, 255, 40, 171, 54, 255, 185, 220, 147, 255, 161, 49, 18, 255, 242, 25, 38, 255, 57, 188, 109, 255, 233, 130, 200, 255, 0, 33, 27, 170, 255, 248, 12, 246, 255, 215, 191, 84, 255, 14, 57, 225, 255, 175, 72, 166, 255, 130, 219, 65, 255, 58, 144, 164, 255, 217, 154, 68, 255, 0, 158, 135, 31, 255, 198, 165, 175, 255, 33, 168, 149, 255, 226, 232, 9, 255, 151, 192, 187, 255, 63, 30, 50, 255, 64, 234, 33, 255, 168, 222, 187, 255, 0, 243, 200, 81, 255, 84, 107, 28, 255, 96, 14, 114, 255, 166, 109, 151, 255, 151, 244, 110, 255, 187, 228, 147, 255, 207, 248, 202, 255, 116, 66, 67, 255, 0, 226, 201, 148, 255, 221, 176, 60, 255, 55, 139, 149, 255, 107, 114, 140, 255, 230, 50, 192, 255, 156, 89, 239, 255, 63, 215, 87, 255, 146, 142, 75, 255, 0, 25, 89, 37, 255, 44, 195, 46, 255, 104, 43, 2, 255, 241, 243, 198, 255, 175, 122, 238, 255, 217, 180, 230, 255, 53, 47, 155, 255, 28, 109, 26, 255, 0, 111, 0, 242, 255, 116, 61, 10, 255, 145, 7, 8, 255, 239, 134, 212, 255, 105, 110, 19, 255, 15, 122, 46, 255, 13, 65, 164, 255, 117, 4, 230, 255, 0, 15, 9, 113, 255, 196, 179, 180, 255, 160, 134, 114, 255, 136, 193, 93, 255, 113, 40, 112, 255, 55, 181, 193, 255, 10, 243, 194, 255, 20, 103, 245, 255, 15, 125, 158, 9, 19, 129, 222, 88, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "jhgso", "896 Pine Blvd", "jhgso@examplemail.com", "vefxoh vcpnvirj", "8853", "890-874-1324", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 29, 1, 45, 255, 79, 251, 234, 255, 29, 126, 169, 255, 239, 246, 173, 255, 82, 3, 14, 255, 127, 246, 3, 255, 250, 168, 183, 255, 181, 113, 28, 255, 0, 23, 188, 162, 255, 49, 7, 95, 255, 190, 238, 193, 255, 141, 161, 147, 255, 38, 234, 188, 255, 213, 63, 228, 255, 226, 254, 70, 255, 159, 140, 106, 255, 0, 104, 168, 123, 255, 194, 51, 169, 255, 240, 66, 122, 255, 234, 28, 69, 255, 172, 236, 18, 255, 101, 148, 15, 255, 196, 168, 198, 255, 98, 76, 205, 255, 0, 25, 234, 230, 255, 143, 91, 132, 255, 78, 88, 127, 255, 174, 8, 131, 255, 44, 184, 106, 255, 56, 105, 60, 255, 235, 83, 81, 255, 122, 10, 0, 255, 0, 104, 190, 157, 255, 120, 155, 76, 255, 118, 191, 30, 255, 70, 211, 136, 255, 34, 221, 189, 255, 49, 209, 165, 255, 129, 102, 83, 255, 217, 107, 132, 255, 0, 116, 26, 5, 255, 238, 20, 195, 255, 230, 242, 18, 255, 231, 207, 240, 255, 61, 40, 190, 255, 175, 40, 243, 255, 114, 64, 250, 255, 67, 216, 76, 255, 0, 21, 175, 66, 255, 71, 197, 78, 255, 60, 126, 8, 255, 103, 128, 150, 255, 219, 17, 82, 255, 163, 111, 44, 255, 94, 151, 194, 255, 143, 161, 238, 255, 0, 73, 77, 80, 255, 230, 67, 115, 255, 104, 148, 118, 255, 99, 213, 81, 255, 204, 54, 130, 255, 164, 144, 183, 255, 224, 189, 182, 255, 101, 33, 228, 255, 192, 202, 160, 179, 103, 253, 116, 139, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "jppyv", "1538 Pine Blvd", "jppyv@examplemail.com", "tlbhvs pdadnblg", "7542", "811-460-5646", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 144, 67, 211, 255, 49, 247, 98, 255, 99, 47, 148, 255, 236, 237, 224, 255, 178, 171, 29, 255, 59, 98, 248, 255, 245, 147, 114, 255, 21, 170, 64, 255, 0, 231, 197, 69, 255, 76, 171, 85, 255, 56, 164, 202, 255, 132, 69, 154, 255, 83, 224, 191, 255, 239, 113, 212, 255, 100, 165, 28, 255, 102, 177, 232, 255, 0, 118, 20, 28, 255, 16, 157, 0, 255, 13, 94, 136, 255, 245, 189, 91, 255, 18, 26, 135, 255, 2, 75, 143, 255, 251, 253, 67, 255, 144, 238, 23, 255, 0, 150, 165, 250, 255, 111, 192, 128, 255, 140, 15, 204, 255, 132, 213, 130, 255, 219, 153, 18, 255, 34, 5, 65, 255, 105, 113, 189, 255, 128, 123, 66, 255, 0, 168, 248, 88, 255, 254, 149, 86, 255, 173, 136, 195, 255, 51, 72, 183, 255, 166, 210, 130, 255, 193, 132, 171, 255, 221, 74, 100, 255, 39, 117, 60, 255, 0, 203, 137, 142, 255, 51, 0, 2, 255, 206, 138, 216, 255, 191, 88, 54, 255, 130, 38, 169, 255, 98, 108, 252, 255, 54, 29, 18, 255, 115, 130, 0, 255, 0, 117, 182, 236, 255, 10, 26, 191, 255, 168, 152, 167, 255, 121, 91, 157, 255, 204, 223, 195, 255, 164, 67, 101, 255, 48, 47, 160, 255, 172, 56, 178, 255, 0, 114, 43, 219, 255, 23, 222, 193, 255, 128, 30, 104, 255, 244, 31, 138, 255, 137, 197, 27, 255, 33, 148, 61, 255, 91, 24, 105, 255, 253, 102, 47, 255, 14, 175, 158, 158, 107, 218, 153, 101, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "nfhsv", "9415 Birch Rd", "nfhsv@examplemail.com", "gfoyli ogegijoh", "5259", "523-164-5323", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 45, 151, 221, 255, 250, 80, 135, 255, 165, 134, 21, 255, 119, 176, 205, 255, 171, 218, 216, 255, 38, 111, 85, 255, 161, 195, 218, 255, 67, 13, 56, 255, 0, 236, 242, 187, 255, 27, 80, 238, 255, 165, 179, 152, 255, 163, 164, 188, 255, 233, 126, 49, 255, 152, 99, 221, 255, 11, 150, 51, 255, 82, 13, 144, 255, 0, 208, 176, 38, 255, 216, 104, 128, 255, 43, 116, 62, 255, 156, 69, 177, 255, 91, 108, 120, 255, 129, 147, 23, 255, 194, 89, 230, 255, 106, 1, 237, 255, 0, 3, 88, 148, 255, 100, 161, 168, 255, 99, 237, 231, 255, 198, 3, 37, 255, 33, 169, 156, 255, 155, 179, 45, 255, 33, 188, 131, 255, 131, 29, 242, 255, 0, 153, 104, 204, 255, 88, 103, 13, 255, 159, 251, 29, 255, 44, 206, 95, 255, 172, 63, 187, 255, 167, 3, 19, 255, 151, 31, 238, 255, 210, 99, 107, 255, 0, 22, 102, 150, 255, 125, 108, 51, 255, 168, 2, 76, 255, 208, 227, 218, 255, 149, 131, 181, 255, 216, 97, 59, 255, 19, 57, 183, 255, 228, 65, 13, 255, 0, 71, 160, 131, 255, 83, 170, 2, 255, 51, 153, 150, 255, 126, 232, 166, 255, 4, 205, 206, 255, 106, 248, 61, 255, 71, 186, 142, 255, 13, 186, 142, 255, 0, 25, 98, 169, 255, 159, 164, 175, 255, 221, 10, 146, 255, 85, 89, 48, 255, 232, 153, 25, 255, 196, 62, 171, 255, 78, 163, 210, 255, 10, 53, 59, 255, 193, 238, 158, 25, 107, 54, 147, 79, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "onaqn", "2260 Pine Blvd", "onaqn@examplemail.com", "iohhxp byvnmdnl", "3209", "643-136-2013", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 203, 33, 130, 255, 179, 166, 1, 255, 131, 211, 14, 255, 249, 52, 75, 255, 79, 19, 246, 255, 2, 73, 221, 255, 0, 48, 189, 255, 1, 130, 22, 255, 0, 142, 241, 158, 255, 208, 88, 231, 255, 76, 167, 233, 255, 178, 108, 116, 255, 119, 56, 117, 255, 0, 64, 78, 255, 250, 174, 210, 255, 107, 81, 121, 255, 0, 92, 127, 141, 255, 204, 112, 124, 255, 69, 118, 163, 255, 137, 159, 78, 255, 234, 35, 113, 255, 127, 88, 19, 255, 206, 30, 101, 255, 25, 229, 171, 255, 0, 54, 128, 189, 255, 13, 97, 161, 255, 140, 1, 38, 255, 149, 6, 33, 255, 11, 104, 59, 255, 114, 149, 2, 255, 123, 79, 45, 255, 93, 4, 93, 255, 0, 167, 169, 229, 255, 92, 91, 52, 255, 100, 222, 141, 255, 26, 218, 18, 255, 108, 239, 53, 255, 139, 218, 166, 255, 112, 207, 47, 255, 171, 185, 166, 255, 0, 104, 242, 219, 255, 93, 139, 103, 255, 208, 177, 128, 255, 89, 203, 19, 255, 103, 20, 34, 255, 35, 107, 21, 255, 35, 14, 172, 255, 156, 157, 254, 255, 0, 91, 245, 96, 255, 80, 106, 84, 255, 132, 214, 249, 255, 250, 200, 131, 255, 131, 184, 94, 255, 19, 132, 107, 255, 152, 135, 212, 255, 69, 102, 19, 255, 0, 116, 82, 238, 255, 206, 146, 157, 255, 91, 71, 97, 255, 148, 133, 179, 255, 204, 36, 78, 255, 122, 201, 125, 255, 116, 221, 30, 255, 99, 5, 125, 255, 49, 78, 153, 165, 225, 232, 190, 115, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "swihf", "9969 Oak Rd", "swihf@examplemail.com", "kzzjgu cludppji", "3323", "793-600-8586", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 237, 109, 13, 255, 147, 139, 146, 255, 97, 50, 155, 255, 116, 146, 188, 255, 236, 171, 141, 255, 110, 177, 172, 255, 3, 30, 79, 255, 50, 87, 171, 255, 0, 39, 184, 27, 255, 237, 224, 114, 255, 73, 116, 202, 255, 129, 2, 77, 255, 77, 9, 203, 255, 33, 214, 228, 255, 111, 117, 11, 255, 170, 21, 179, 255, 0, 7, 35, 239, 255, 225, 239, 163, 255, 23, 107, 52, 255, 219, 81, 27, 255, 221, 31, 99, 255, 251, 114, 232, 255, 72, 226, 187, 255, 152, 7, 87, 255, 0, 63, 69, 69, 255, 116, 26, 195, 255, 210, 11, 229, 255, 127, 192, 98, 255, 81, 41, 208, 255, 89, 63, 114, 255, 88, 95, 242, 255, 14, 121, 211, 255, 0, 120, 1, 19, 255, 88, 164, 212, 255, 197, 65, 159, 255, 189, 80, 24, 255, 242, 220, 104, 255, 212, 246, 2, 255, 49, 162, 64, 255, 84, 212, 3, 255, 0, 189, 74, 216, 255, 202, 28, 168, 255, 252, 49, 209, 255, 44, 199, 36, 255, 196, 123, 143, 255, 119, 39, 49, 255, 183, 82, 7, 255, 13, 35, 213, 255, 0, 211, 222, 145, 255, 86, 80, 7, 255, 66, 204, 176, 255, 38, 151, 181, 255, 248, 187, 152, 255, 41, 235, 79, 255, 86, 228, 168, 255, 53, 202, 145, 255, 0, 40, 240, 39, 255, 9, 27, 195, 255, 252, 158, 32, 255, 56, 97, 19, 255, 129, 247, 74, 255, 160, 43, 10, 255, 249, 78, 205, 255, 191, 245, 250, 255, 252, 31, 156, 242, 175, 1, 56, 157, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "uanae", "8221 Maple Blvd", "uanae@examplemail.com", "lmihkx rytcvzyu", "1426", "515-360-6063", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 168, 214, 33, 255, 109, 186, 83, 255, 233, 136, 35, 255, 3, 26, 124, 255, 54, 183, 11, 255, 170, 37, 233, 255, 71, 162, 38, 255, 251, 135, 109, 255, 0, 93, 213, 96, 255, 6, 54, 63, 255, 116, 53, 144, 255, 80, 238, 197, 255, 172, 243, 160, 255, 40, 100, 65, 255, 141, 214, 248, 255, 223, 13, 97, 255, 0, 130, 50, 92, 255, 144, 93, 91, 255, 40, 36, 185, 255, 192, 67, 152, 255, 245, 24, 36, 255, 2, 50, 209, 255, 102, 229, 2, 255, 39, 26, 238, 255, 0, 232, 89, 11, 255, 82, 73, 203, 255, 50, 84, 69, 255, 173, 39, 20, 255, 202, 250, 60, 255, 117, 207, 207, 255, 50, 121, 59, 255, 148, 157, 73, 255, 0, 245, 238, 161, 255, 137, 248, 70, 255, 66, 78, 206, 255, 99, 161, 58, 255, 117, 202, 208, 255, 69, 151, 99, 255, 119, 7, 248, 255, 229, 154, 111, 255, 0, 176, 242, 254, 255, 140, 109, 28, 255, 9, 29, 0, 255, 0, 239, 139, 255, 72, 33, 249, 255, 232, 121, 29, 255, 243, 246, 25, 255, 89, 173, 115, 255, 0, 153, 175, 35, 255, 104, 80, 53, 255, 175, 151, 176, 255, 180, 217, 182, 255, 222, 125, 135, 255, 91, 48, 115, 255, 156, 115, 203, 255, 111, 231, 52, 255, 0, 150, 159, 85, 255, 110, 74, 16, 255, 222, 104, 13, 255, 221, 120, 247, 255, 52, 53, 82, 255, 179, 187, 125, 255, 80, 42, 34, 255, 81, 175, 121, 255, 128, 74, 155, 254, 45, 68, 114, 233, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "userdonald", "Florida", "donald@realdonald.com", "Donny Trumpas", "userpassword", "666-666-6666", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 198, 208, 63, 255, 56, 227, 58, 255, 39, 191, 213, 255, 202, 185, 36, 255, 70, 83, 7, 255, 140, 100, 155, 255, 105, 181, 86, 255, 195, 44, 39, 255, 0, 170, 46, 32, 255, 135, 202, 241, 255, 129, 178, 50, 255, 63, 53, 61, 255, 110, 17, 23, 255, 168, 70, 4, 255, 214, 250, 130, 255, 35, 135, 180, 255, 0, 54, 53, 75, 255, 108, 241, 9, 255, 125, 152, 23, 255, 122, 33, 232, 255, 131, 131, 168, 255, 65, 140, 122, 255, 248, 189, 55, 255, 81, 56, 247, 255, 0, 77, 155, 191, 255, 240, 154, 172, 255, 62, 163, 128, 255, 46, 26, 0, 255, 178, 192, 0, 255, 198, 87, 36, 255, 101, 24, 210, 255, 75, 137, 231, 255, 0, 220, 219, 166, 255, 225, 194, 63, 255, 30, 44, 95, 255, 30, 132, 253, 255, 155, 57, 137, 255, 18, 192, 227, 255, 183, 178, 122, 255, 19, 103, 104, 255, 0, 93, 221, 60, 255, 168, 251, 130, 255, 173, 224, 226, 255, 166, 194, 160, 255, 166, 246, 158, 255, 103, 73, 218, 255, 56, 139, 121, 255, 227, 161, 38, 255, 0, 78, 54, 108, 255, 174, 80, 56, 255, 2, 218, 16, 255, 172, 4, 216, 255, 57, 27, 23, 255, 189, 227, 8, 255, 136, 218, 114, 255, 129, 4, 9, 255, 0, 35, 45, 93, 255, 55, 84, 38, 255, 208, 182, 71, 255, 238, 35, 30, 255, 134, 101, 190, 255, 29, 134, 135, 255, 28, 21, 155, 255, 226, 249, 161, 255, 157, 19, 154, 151, 156, 241, 55, 235, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, "null" },
                    { "userjoe", "Washington DC", "biden@potus.com", "Joe Biden", "userpassword", "777-777-7777", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 68, 206, 180, 255, 11, 7, 253, 255, 3, 61, 109, 255, 222, 139, 143, 255, 154, 67, 203, 255, 237, 79, 118, 255, 115, 175, 65, 255, 252, 144, 163, 255, 0, 169, 115, 87, 255, 15, 57, 62, 255, 171, 207, 149, 255, 209, 68, 96, 255, 183, 216, 165, 255, 75, 184, 168, 255, 183, 194, 4, 255, 18, 237, 101, 255, 0, 33, 244, 204, 255, 165, 1, 97, 255, 24, 122, 80, 255, 117, 124, 161, 255, 184, 74, 2, 255, 24, 34, 157, 255, 93, 63, 244, 255, 77, 40, 25, 255, 0, 162, 109, 27, 255, 183, 35, 215, 255, 88, 129, 73, 255, 88, 109, 182, 255, 69, 203, 67, 255, 67, 90, 52, 255, 38, 244, 11, 255, 112, 161, 69, 255, 0, 121, 78, 251, 255, 77, 245, 82, 255, 34, 13, 35, 255, 219, 3, 214, 255, 25, 76, 109, 255, 151, 28, 128, 255, 220, 201, 247, 255, 39, 203, 179, 255, 0, 71, 234, 98, 255, 59, 39, 241, 255, 26, 204, 54, 255, 20, 219, 179, 255, 224, 145, 90, 255, 218, 195, 94, 255, 100, 226, 168, 255, 156, 77, 78, 255, 0, 78, 84, 228, 255, 7, 33, 18, 255, 164, 232, 24, 255, 171, 58, 60, 255, 81, 214, 6, 255, 206, 244, 120, 255, 153, 72, 86, 255, 94, 29, 144, 255, 0, 56, 99, 76, 255, 197, 163, 223, 255, 203, 163, 29, 255, 121, 28, 136, 255, 98, 182, 187, 255, 78, 2, 160, 255, 101, 174, 135, 255, 109, 0, 224, 255, 78, 41, 153, 175, 183, 29, 111, 247, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, "null" },
                    { "uyuwz", "1969 Elm Rd", "uyuwz@examplemail.com", "pobffd qhjaynye", "1071", "931-539-3916", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 207, 246, 141, 255, 156, 119, 22, 255, 47, 142, 28, 255, 229, 109, 142, 255, 33, 75, 11, 255, 154, 82, 125, 255, 209, 125, 2, 255, 156, 159, 68, 255, 0, 116, 72, 0, 255, 65, 88, 31, 255, 204, 86, 57, 255, 212, 253, 228, 255, 8, 42, 128, 255, 37, 51, 101, 255, 12, 230, 165, 255, 143, 62, 30, 255, 0, 139, 108, 232, 255, 250, 20, 22, 255, 208, 53, 69, 255, 71, 22, 63, 255, 85, 195, 57, 255, 116, 149, 147, 255, 84, 45, 31, 255, 56, 3, 26, 255, 0, 17, 64, 221, 255, 208, 248, 92, 255, 240, 193, 34, 255, 20, 81, 173, 255, 196, 58, 86, 255, 180, 241, 125, 255, 92, 253, 111, 255, 177, 180, 39, 255, 0, 117, 53, 47, 255, 241, 220, 237, 255, 213, 185, 252, 255, 115, 104, 50, 255, 152, 16, 178, 255, 202, 99, 144, 255, 230, 209, 33, 255, 29, 72, 68, 255, 0, 166, 208, 154, 255, 21, 120, 87, 255, 49, 32, 199, 255, 116, 185, 100, 255, 116, 30, 41, 255, 43, 133, 33, 255, 196, 243, 217, 255, 2, 121, 196, 255, 0, 178, 127, 101, 255, 45, 37, 48, 255, 9, 94, 177, 255, 201, 147, 246, 255, 46, 115, 213, 255, 163, 66, 20, 255, 198, 243, 245, 255, 168, 76, 149, 255, 0, 213, 150, 20, 255, 198, 105, 133, 255, 86, 217, 85, 255, 168, 223, 70, 255, 98, 232, 163, 255, 82, 61, 83, 255, 233, 17, 127, 255, 51, 193, 154, 255, 123, 18, 154, 33, 228, 54, 32, 246, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "yiihf", "8736 Elm Ave", "yiihf@examplemail.com", "ykdqsb dndcyuxb", "6833", "396-719-3243", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 141, 247, 72, 255, 116, 193, 145, 255, 172, 31, 82, 255, 77, 67, 195, 255, 212, 66, 90, 255, 186, 112, 89, 255, 127, 60, 161, 255, 179, 79, 3, 255, 0, 171, 67, 171, 255, 50, 19, 143, 255, 235, 108, 168, 255, 242, 85, 158, 255, 100, 180, 253, 255, 199, 32, 124, 255, 18, 91, 222, 255, 212, 128, 232, 255, 0, 145, 92, 243, 255, 72, 246, 193, 255, 39, 42, 123, 255, 183, 161, 125, 255, 143, 191, 94, 255, 65, 251, 208, 255, 175, 231, 138, 255, 96, 178, 239, 255, 0, 232, 4, 105, 255, 191, 241, 4, 255, 222, 157, 239, 255, 184, 33, 157, 255, 187, 125, 76, 255, 107, 104, 202, 255, 137, 23, 109, 255, 74, 81, 98, 255, 0, 138, 224, 64, 255, 218, 24, 9, 255, 239, 35, 154, 255, 115, 84, 139, 255, 165, 84, 190, 255, 40, 86, 171, 255, 226, 72, 87, 255, 178, 155, 104, 255, 0, 131, 250, 41, 255, 12, 128, 195, 255, 9, 44, 129, 255, 7, 247, 179, 255, 180, 174, 108, 255, 119, 108, 105, 255, 184, 252, 114, 255, 125, 208, 227, 255, 0, 64, 56, 75, 255, 87, 112, 124, 255, 217, 238, 18, 255, 79, 204, 80, 255, 182, 180, 61, 255, 35, 93, 148, 255, 118, 27, 83, 255, 158, 70, 94, 255, 0, 5, 169, 244, 255, 84, 233, 0, 255, 54, 193, 85, 255, 144, 169, 56, 255, 100, 201, 113, 255, 68, 97, 146, 255, 209, 217, 150, 255, 143, 229, 165, 255, 23, 99, 162, 78, 136, 4, 217, 59, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null }
                });

            migrationBuilder.InsertData(
                table: "BankAccounts",
                columns: new[] { "AccountNumber", "AccountHolderName", "Balance", "UserUsername" },
                values: new object[,]
                {
                    { 1, "Joe Biden's Account", 25877.0, "userjoe" },
                    { 2, "Donald Trump's Account", 3477.0, "userdonald" },
                    { 3, "lmihkx rytcvzyu's Account", 12357.169999999998, "uanae" },
                    { 4, "vefxoh vcpnvirj's Account", 9299.1899999999987, "jhgso" },
                    { 5, "gfoyli ogegijoh's Account", 76867.820000000007, "nfhsv" },
                    { 6, "tlbhvs pdadnblg's Account", 8827.7099999999991, "jppyv" },
                    { 7, "ehrsah tuqpzfxu's Account", 561.36000000000013, "azpbs" },
                    { 8, "ofoymn qbvvydbd's Account", 1004.1800000000003, "dlqpk" },
                    { 9, "hqubtp kemafiaw's Account", 22835.720000000001, "ggqsl" },
                    { 10, "gyosys vouniebc's Account", 9531.3199999999997, "audjy" },
                    { 11, "iohhxp byvnmdnl's Account", 54853.959999999999, "onaqn" },
                    { 12, "kzzjgu cludppji's Account", 3018.9499999999971, "swihf" },
                    { 13, "pobffd qhjaynye's Account", 11426.080000000002, "uyuwz" },
                    { 14, "ykdqsb dndcyuxb's Account", 11425.43, "yiihf" }
                });

            migrationBuilder.InsertData(
                table: "Transactions",
                columns: new[] { "TransactionId", "Amount", "BankAccountAccountNumber", "Description", "FromAccountNumber", "Timestamp", "ToAccountNumber" },
                values: new object[,]
                {
                    { 1, 20830.0, null, "Transfer of $20,830.00 from 13 to 11", 13, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6325), 11 },
                    { 2, 19051.0, null, "Transfer of $19,051.00 from 11 to 6", 11, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6361), 6 },
                    { 3, 14906.0, null, "Transfer of $14,906.00 from 3 to 9", 3, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6368), 9 },
                    { 4, 3992.0, null, "Transfer of $3,992.00 from 2 to 8", 2, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6371), 8 },
                    { 5, 3338.0, null, "Transfer of $3,338.00 from 8 to 2", 8, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6373), 2 },
                    { 6, 1137.0, null, "Transfer of $1,137.00 from 11 to 14", 11, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6376), 14 },
                    { 7, 4131.0, null, "Transfer of $4,131.00 from 4 to 14", 4, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6380), 14 },
                    { 8, 2595.0, null, "Transfer of $2,595.00 from 7 to 13", 7, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6382), 13 },
                    { 9, 14954.0, null, "Transfer of $14,954.00 from 6 to 14", 6, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6384), 14 },
                    { 10, 182.0, null, "Transfer of $182.00 from 4 to 11", 4, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6388), 11 },
                    { 11, 6526.0, null, "Transfer of $6,526.00 from 6 to 4", 6, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6391), 4 },
                    { 12, 9100.0, null, "Transfer of $9,100.00 from 14 to 6", 14, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6393), 6 },
                    { 13, 50712.0, null, "Transfer of $50,712.00 from 12 to 11", 12, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6396), 11 },
                    { 14, 567.0, null, "Transfer of $567.00 from 6 to 9", 6, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6399), 9 },
                    { 15, 79.0, null, "Transfer of $79.00 from 4 to 14", 4, new DateTime(2023, 10, 13, 11, 26, 6, 550, DateTimeKind.Utc).AddTicks(6402), 14 }
                });

            migrationBuilder.CreateIndex(
                name: "IX_BankAccounts_UserUsername",
                table: "BankAccounts",
                column: "UserUsername");

            migrationBuilder.CreateIndex(
                name: "IX_Transactions_BankAccountAccountNumber",
                table: "Transactions",
                column: "BankAccountAccountNumber");

            migrationBuilder.CreateIndex(
                name: "IX_Transactions_FromAccountNumber",
                table: "Transactions",
                column: "FromAccountNumber");

            migrationBuilder.CreateIndex(
                name: "IX_Transactions_ToAccountNumber",
                table: "Transactions",
                column: "ToAccountNumber");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Admins");

            migrationBuilder.DropTable(
                name: "AuditLogs");

            migrationBuilder.DropTable(
                name: "Transactions");

            migrationBuilder.DropTable(
                name: "BankAccounts");

            migrationBuilder.DropTable(
                name: "Users");
        }
    }
}
